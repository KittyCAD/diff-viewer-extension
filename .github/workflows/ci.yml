name: CI

on:
    push:
        branches:
            - main
    pull_request:
    release:
        types: [published]

jobs:
    commit-release-version:
        if: github.event_name == 'release'
        runs-on: ubuntu-latest

        env:
            RELEASE: ${{ github.event.release.name }}

        steps:
            - uses: actions/checkout@v3.5.2

            - name: Set release package.json and manifest.json versions from tag
              run: |
                  echo "$(jq --arg v "${RELEASE#v}" '.version=$v' package.json         --indent 4)" > package.json
                  echo "$(jq --arg v "${RELEASE#v}" '.version=$v' public/manifest.json --indent 4)" > public/manifest.json
                  git diff

            - name: Commit release version
              run: |
                  git add .
                  git config user.name github-actions
                  git config user.email github-actions@github.com
                  git commit -m "Release version $RELEASE"
                  git push

    install-build-test:
        needs: commit-release-version
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3.5.2

            - uses: actions/setup-node@v3.6.0
              with:
                  node-version: '16'
                  cache: 'yarn'

            - run: yarn install

            - run: yarn build

            - run: yarn test

            - name: Run playwright e2e tests
              env:
                  GITHUB_TOKEN: ${{secrets.GLOBAL_PAT}}
                  KITTYCAD_TOKEN: ${{secrets.KITTYCAD_TOKEN}}
              run: |
                  yarn playwright install chromium --with-deps
                  yarn playwright test

            - uses: actions/upload-artifact@v3
              with:
                  path: build

    deploy-release:
        if: github.event_name == 'release'
        needs: [commit-release-version, install-build-test]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3.5.2

            - name: Create release binaries
              env:
                  RELEASE: ${{ github.event.release.name }}
              run: |
                  export ZIP_PATH=kittycad_diff-viewer_$RELEASE.zip
                  zip -r $ZIP_PATH build/
                  ls

            - name: Upload binaries to release
              if: github.event_name == 'release'
              uses: svenstaro/upload-release-action@v2
              with:
                  file: kittycad_diff-viewer_${{ github.event.release.name }}.zip

            # TODO: if release, add push to cws
